<?php

namespace Setting\Bundle\AppearanceBundle\Repository;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\AppearanceBundle\Entity\FeatureWidget;
use Setting\Bundle\AppearanceBundle\Entity\FeatureWidgetItem;

/**
 * FeatureWidgetItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeatureWidgetItemRepository extends EntityRepository
{

    public function insert(FeatureWidget $featureWidget,$data)
    {
        $em = $this->_em;
        if(!empty($data['feature'])){
            foreach ($data['feature'] as $row){
                $entity = new FeatureWidgetItem();
                $entity->setFeatureWidget($featureWidget);
                $entity->setFeature($em->getRepository('SettingAppearanceBundle:Feature')->find($row));
                $em->persist($entity);
                $em->flush();
            }
        }

    }

    public function update(FeatureWidget $featureWidget,$data)
    {

        if(!empty($data['feature'])){
            $this->insert($featureWidget,$data);
        }
        if(!empty($data['checkId'])){
            $this->remove($featureWidget,$data);
        }

    }

    public function remove(FeatureWidget $featureWidget,$data)
    {

        $em = $this->_em;
        foreach ($data['checkId'] as $row){

            $entity = $em->getRepository('SettingAppearanceBundle:FeatureWidgetItem')->findOneBy(array('featureWidget' => $featureWidget,'feature'=>$row));
            $em->remove($entity);
            $em->flush();

        }
    }


}
