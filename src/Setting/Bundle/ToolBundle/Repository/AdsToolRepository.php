<?php

namespace Setting\Bundle\ToolBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * AdsToolRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdsToolRepository extends EntityRepository
{

    public function adsToolUpdate($globalOption,$data)
    {
        $em = $this->_em;
        $entity = $globalOption->getAdsTool();
        if(isset($data['googleServiceID']) and $data['googleServiceID'] != '') {
            $entity->setGoogleServiceID($data['googleServiceID']);
        }
        if(isset($data['slotID']) and $data['slotID'] != '') {
            $entity->setSlotID($data['slotID']);
        }

        if(isset($data['siteName']) and $data['siteName'] != '') {
            $entity->setSiteName($data['siteName']);
        }
        if(isset($data['keyword']) and $data['keyword'] != '') {
            $entity->setKeyword($data['keyword']);
        }

        if(isset($data['metaDescription']) and $data['metaDescription'] != '') {
            $entity->setMetaDescription($data['metaDescription']);
        }

        if(isset($data['googleVerificationCode']) and $data['googleVerificationCode'] != '') {
            $entity->setGoogleVerificationCode($data['googleVerificationCode']);
        }

        if(isset($data['redirectLang']) and $data['redirectLang'] != '') {
            $entity->setRedirectLang($data['redirectLang']);
        }
        $redirectTablet = isset($data['redirectTablet']) ? 1:0 ;
        $entity->setRedirectTablet($redirectTablet);

        if(isset($data['statCounterID']) and $data['statCounterID'] != '') {
            $entity->setStatCounterID($data['statCounterID']);
        }

        if(isset($data['statCounterSecurityCode']) and $data['statCounterSecurityCode'] != '') {
            $entity->setStatCounterSecurityCode($data['statCounterSecurityCode']);
        }
        $statCounterVisible = isset($data['statCounterVisible']) ? 1:0 ;
        $entity->setStatCounterVisible($statCounterVisible);

        $em->persist($entity);
        $em->flush();

    }

}
