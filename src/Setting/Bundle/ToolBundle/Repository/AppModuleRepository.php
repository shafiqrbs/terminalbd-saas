<?php

namespace Setting\Bundle\ToolBundle\Repository;
use Doctrine\ORM\EntityRepository;
use Gregwar\Image\Image;

/**
 * ProductUnitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AppModuleRepository extends EntityRepository
{
    public function getAppModules()
    {
        $qb = $this->createQueryBuilder('e');
        $qb->select('e.id as id','e.name as name','e.moduleClass as moduleClass','e.shortContent as content','e.path');
        $qb->where('e.status =1');
        $result = $qb->getQuery()->getArrayResult();
        $data = array();
        foreach($result as $key => $row) {

            $data[$key]['id']               = (int) $row['id'];
            $data[$key]['name']             =  $row['name'];
            $data[$key]['moduleClass']      =  $row['moduleClass'];
            if($row['path']){
                $path = $this->resizeFilter("uploads/admin/content/{$row['path']}");
                $data[$key]['imagePath']            =  $path;
            }else{
                $data[$key]['imagePath']            = "";
            }
        }
        return $data;
    }

    public function getAndroidAppModules()
    {
        $qb = $this->createQueryBuilder('e');
        $qb->select('e.id as id','e.name as name','e.moduleClass as moduleClass');
        $qb->where('e.status =1');
        $qb->andWhere('e.androidStatus =1');
        $result = $qb->getQuery()->getArrayResult();
        $data = array();
        foreach($result as $key => $row) {

            $data[$key]['id']               = (int) $row['id'];
            $data[$key]['name']             =  $row['name'];
            $data[$key]['moduleClass']      =  $row['moduleClass'];
        }
        return $data;
    }


    public function getAppModuleDetails($id)
    {
        $qb = $this->createQueryBuilder('e');
        $qb->select('e.id as id','e.name as name','e.content as content','e.path');
        $qb->where('e.status =1');
        $qb->andWhere("e.id ={$id}");
        $row = $qb->getQuery()->getOneOrNullResult();
        $data = array();

        $data['id']               = (int) $row['id'];
        $data['name']             =  $row['name'];
        $data['content']     =  $row['content'];
        if($row['path']){
            $path = $this->resizeFilter("uploads/admin/content/{$row['path']}");
            $data['imagePath']            =  $path;
        }else{
            $data['imagePath']            = "";
        }
        return $data;
    }


    public function resizeFilter($pathToImage, $width = 256, $height = 256)
    {
        $path = '/' . Image::open(__DIR__.'/../../../../../web/' . $pathToImage)->cropResize($width, $height, 'transparent', 'top', 'left')->guess();
        return $_SERVER['HTTP_HOST'].$path;
    }



}
