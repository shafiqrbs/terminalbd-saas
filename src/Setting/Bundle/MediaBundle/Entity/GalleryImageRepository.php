<?php

namespace Setting\Bundle\MediaBundle\Entity;

use Doctrine\ORM\EntityRepository;


/**
 * GalleryImageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GalleryImageRepository extends EntityRepository
{

    public function insertGalleryImage($data,$galleryId)
    {
        $em = $this->_em;
        $galleryEnt = $em->getRepository('SettingMediaBundle:PhotoGallery')->find($galleryId);
        if($galleryEnt){
            $i=0;
            foreach ($data as $key => $value) {

                $entity = new GalleryImage();

                if(strpos($key,'tmpname')){

                    $imageName = nl2br(htmlentities(stripslashes($value)));
                    $entity->setPath($imageName);
                    $entity->setSorting($i);
                    $entity->setStatus(true);
                    $entity->setPhotoGallery($galleryEnt);
                    $em->persist($entity);

                }

                $i++;

            }
            $em->flush();

        }
    }

    public function updateGalleryImage($data)
    {

        $em = $this->_em;

        $i=0;
        if(!empty($data['removeId'])){
            $this->removeGalleryImage($data['removeId']);
        }

        foreach ($data['imageId'] as $key ){

            $caption = ($data['caption'][$i]) ? $data['caption'][$i] : null ;
            $description = ($data['description'][$i]) ? $data['description'][$i] : null ;
            $status = isset($data['status'][$i]) ? $data['status'][$i] : 0 ;
            $sorting = ($data['sorting'][$i]) ? $data['sorting'][$i] : 0 ;

            $entity = $em->getRepository('SettingMediaBundle:GalleryImage')->findOneBy(array('id'=>$key));
            if (!empty($entity)) {

                $entity->setCaption($caption);
                $entity->setDescription($description);
                $entity->setStatus($status);
                $entity->setSorting($sorting);
                $em->persist($entity);


            }
            $i++;

        }
        $em->flush();


    }

    public function removeGalleryImage($data)
    {
        $em = $this->_em;
        if(!empty($data)){

            foreach ($data as $key ){
                $entity = $em->getRepository('SettingMediaBundle:GalleryImage')->find($key);
                if(!empty($entity)){
                    $entity->removeUpload($entity->getPhotoGallery()->getGlobalOption()->getId(),$entity->getPhotoGallery()->getId());
                    $em->remove($entity);
                }

            }
            $em->flush();
        }


    }



}
