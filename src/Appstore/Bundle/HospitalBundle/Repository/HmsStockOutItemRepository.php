<?php

namespace Appstore\Bundle\HospitalBundle\Repository;
use Appstore\Bundle\HospitalBundle\Entity\HmsPurchase;
use Appstore\Bundle\HospitalBundle\Entity\HmsPurchaseItem;
use Appstore\Bundle\HospitalBundle\Entity\HmsStockOut;
use Appstore\Bundle\HospitalBundle\Entity\HmsStockOutItem;
use Appstore\Bundle\HospitalBundle\Entity\Particular;
use Doctrine\ORM\EntityRepository;


/**
 * HmsPurchaseItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HmsStockOutItemRepository extends EntityRepository
{


    public function insertStockOutItems($invoice, $data)
    {
    	$particular = $this->_em->getRepository('HospitalBundle:Particular')->find($data['particularId']);
        $em = $this->_em;
        $entity = new HmsStockOutItem();
        $entity->setStockOut($invoice);
        $entity->setParticular($particular);
        $entity->setSalesPrice(floatval($data['price']));
        $entity->setPurchasePrice($particular->getPurchasePrice());
        $entity->setQuantity((int)$data['quantity']);
        $entity->setSalesSubTotal((int)$data['quantity'] * floatval($data['price']));
        $entity->setPurchaseSubTotal((int)$data['quantity'] * $particular->getPurchasePrice());
        $em->persist($entity);
        $em->flush();


    }

    public function getStockOutItems(HmsStockOut $sales)
    {
        $entities = $sales->getStockOutItems();
        $data = '';
        $i = 1;
        foreach ($entities as $entity) {
            $data .= "<tr id='remove-{$entity->getId()}'>";
            $data .= "<td>{$i}</td>";
            $data .= "<td>{$entity->getParticular()->getParticularCode()}</td>";
            $data .= "<td>{$entity->getParticular()->getName()}</td>";
            $data .= "<td>{$entity->getQuantity()}</td>";
            $data .= "<td>{$entity->getSalesPrice()}</td>";
            $data .= "<td>{$entity->getSalesSubTotal()}</td>";
            $data .= "<td>";
	        $data .= "<a id='{$entity->getId()}' data-url='/hms/outstock/{$sales->getId()}/{$entity->getId()}/particular-delete' href='javascript:' class='btn red mini itemDelete' ><i class='icon-trash'></i></a>";
	        $data .= "</td>";
            $data .= '</tr>';
            $i++;
        }
        return $data;
    }

}
