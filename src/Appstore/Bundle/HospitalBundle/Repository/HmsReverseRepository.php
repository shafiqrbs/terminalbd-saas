<?php

namespace Appstore\Bundle\HospitalBundle\Repository;
use Appstore\Bundle\HospitalBundle\Entity\HmsPurchase;
use Appstore\Bundle\HospitalBundle\Entity\HmsPurchaseItem;
use Appstore\Bundle\HospitalBundle\Entity\HmsReverse;
use Appstore\Bundle\HospitalBundle\Entity\Invoice;
use Appstore\Bundle\HospitalBundle\Entity\InvoiceParticular;
use Appstore\Bundle\HospitalBundle\Entity\Particular;
use Doctrine\ORM\EntityRepository;


/**
 * HmsReverseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HmsReverseRepository extends EntityRepository
{
    public function insertInvoice(Invoice $entity,$data)
    {
        if(empty($entity->getHmsReverse())){
            $reverse = New HmsReverse();
        }else{
            $reverse = $entity->getHmsReverse();
        }
        $reverse->setName('Diagnostic Invoice');
        $reverse->setHospitalConfig($entity->getHospitalConfig());
        $reverse->setProcess($entity->getProcess());
        $reverse->setContent($data);
        $reverse->setHmsInvoice($entity);
        $this->_em->persist($reverse);
        $this->_em->flush($reverse);

    }
    public function insertAdmissionInvoice(Invoice $entity,$data)
    {

        if(empty($entity->getHmsReverse())){
            $reverse = New HmsReverse();
        }else{
            $reverse = $entity->getHmsReverse();
        }

        $reverse->setName('Admitted Invoice');
        $reverse->setHospitalConfig($entity->getHospitalConfig());
        $reverse->setProcess('Admitted Invoice');
        $reverse->setContent($data);
        $reverse->setHmsInvoice($entity);
        $this->_em->persist($reverse);
        $this->_em->flush($reverse);

    }


}
