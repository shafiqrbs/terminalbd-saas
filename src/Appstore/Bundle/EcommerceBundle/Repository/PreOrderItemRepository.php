<?php

namespace Appstore\Bundle\EcommerceBundle\Repository;
use Appstore\Bundle\EcommerceBundle\Entity\PreOrder;
use Appstore\Bundle\EcommerceBundle\Entity\PreOrderItem;
use Doctrine\ORM\EntityRepository;

/**
 * PreOrderItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PreOrderItemRepository extends EntityRepository
{

    public function itemOrderUpdate($order,$data)
    {
        $em = $this->_em;
        $i = 0;
        foreach ($data['item'] as $row ){

            $entity = $em->getRepository('EcommerceBundle:PreOrderItem')->find($data['item'][$i]);
            if($entity->isStatus() == 1){
                $entity->setPreOrder($order);
                $entity->setPrice($data['price'][$i]);
                $entity->setShippingCharge($data['shippingCharge'][$i]);
                $total = ($entity->getQuantity() * $data['price'][$i]);
                $entity->setTotal($total);
                $em->persist($entity);
                $em->flush();
            }
            $i++;
        }
    }

    public function updatePreOrderItem(PreOrder $order)
    {
        $em = $this->_em;
        foreach ($order->getPreOrderItems() as $item){
            /* @var $item PreOrderItem */

            if($item->getStatus() == 0 ){
                $item->setStatus(2);
                $em->persist($item);
                $em->flush($item);
            }
        }
    }
}
