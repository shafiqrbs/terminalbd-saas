<?php

namespace Appstore\Bundle\EcommerceBundle\Repository;
use Appstore\Bundle\InventoryBundle\Entity\InventoryConfig;
use Doctrine\ORM\EntityRepository;

/**
 * PromotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends EntityRepository
{


    public function getTypeBasePromotion($config,$type)
    {
        $qb = $this->createQueryBuilder('e');
        $qb ->where("e.status = 1");
        $qb->andWhere($qb->expr()->like('e.type', ':type'));
        $qb->setParameter('type','%Promotion%');
        $qb->andWhere("e.ecommerceConfig =".$config);
        $qb->orderBy('e.name','ASC');
        $result = $qb->getQuery()->getResult();
        return $result;

    }


    public function getFeatureTag($config,$limit = 16)
    {
        $qb = $this->createQueryBuilder('e');
        $qb ->where("e.status = 1");
        $qb->andWhere($qb->expr()->like('e.type', ':type'));
        $qb->setParameter('type','%Tag%');
        $qb->andWhere("e.ecommerceConfig ={$config}");
        $qb->andWhere("e.feature =1");
        $qb->orderBy('e.id','DESC');
        $qb->setMaxResults($limit);
        $result = $qb->getQuery()->getResult();
        return $result;

    }

    public function getFeaturePromotion($config,$limit = 16)
    {
        $qb = $this->createQueryBuilder('e');
        $qb ->where("e.status = 1");
        $qb->andWhere($qb->expr()->like('e.type', ':type'));
        $qb->setParameter('type','%Promotion%');
        $qb->andWhere("e.ecommerceConfig ={$config}");
        $qb->andWhere("e.feature =1");
        $qb->orderBy('e.id','DESC');
        $qb->setMaxResults($limit);
        $result = $qb->getQuery()->getResult();
        return $result;

    }




}
