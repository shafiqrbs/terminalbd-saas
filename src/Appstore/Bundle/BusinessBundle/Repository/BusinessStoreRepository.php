<?php

namespace Appstore\Bundle\BusinessBundle\Repository;

use Appstore\Bundle\RestaurantBundle\Entity\Invoice;
use Appstore\Bundle\RestaurantBundle\Entity\InvoiceParticular;
use Appstore\Bundle\RestaurantBundle\Entity\Particular;
use Appstore\Bundle\RestaurantBundle\Entity\Purchase;
use Appstore\Bundle\RestaurantBundle\Entity\PurchaseItem;
use Appstore\Bundle\RestaurantBundle\Entity\RestaurantConfig;
use Doctrine\ORM\EntityRepository;


/**
 * WearHouseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BusinessStoreRepository extends EntityRepository
{

    protected function handleSearchBetween($qb,$data)
    {

        $name = isset($data['name'])? $data['name'] :'';
        $customer = isset($data['customer'])? $data['customer'] :'';
        $area = isset($data['area'])? $data['area'] :'';
        $sr = isset($data['marketing'])? $data['marketing'] :'';


        if (!empty($name)) {
            $qb->andWhere($qb->expr()->like("e.name", "'%$name%'"  ));
        }
        if (!empty($customer)) {
            $qb->join('e.customer','c');
            $qb->andWhere("c.id = :user")->setParameter('user', $customer);
        }
        if (!empty($area)) {
            $qb->join('e.area','a');
            $qb->andWhere("a.id = :area")->setParameter('area', $area);
        }
        if (!empty($sr)) {
            $qb->join('e.marketing','sr');
            $qb->andWhere("sr.id = :sr")->setParameter('sr', $sr);
        }


    }

    public function invoiceLists($config, $data)
    {
        $qb = $this->createQueryBuilder('e');
        $qb->where('e.businessConfig = :config')->setParameter('config', $config) ;
        $this->handleSearchBetween($qb,$data);
        $qb->orderBy('e.name','DESC');
        $qb->getQuery();
        return  $qb;
    }

}
