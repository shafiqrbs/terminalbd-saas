<?php

namespace Appstore\Bundle\DomainUserBundle\Repository;
use Appstore\Bundle\DomainUserBundle\Entity\CustomerInbox;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;

/**
 * HrAttendanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HrAttendanceRepository extends EntityRepository
{
    public function findByMonth($globalOption,$data)
    {
        $em = $this->_em;
        $qb = $this->createQueryBuilder('ha');
        $qb->select('ha.month');
        $qb->select('ha.year');
        $qb->where("ha.globalOption = :globalOption");
        $qb->setParameter('globalOption', $globalOption);
        $qb->groupBy('ha.month');
        $qb->orderBy('ha.month','DESC');
        $qb->getQuery();
        return  $qb;

    }

    protected function handleSearchBetween($qb,$data)
    {
        if(!empty($data))
        {

            $mobile =    isset($data['mobile'])? $data['mobile'] :'';
            $customer =    isset($data['name'])? $data['name'] :'';
            $location =    isset($data['location'])? $data['location'] :'';
            $customerId =    isset($data['customerId'])? $data['customerId'] :'';

            if (!empty($mobile)) {
                $qb->andWhere("customer.mobile = :mobile");
                $qb->setParameter('mobile', $mobile);
            }
            if (!empty($location)) {
                $qb->leftJoin('customer.location','l');
                $qb->andWhere("l.name = :location");
                $qb->setParameter('location', $location);
            }

            if (!empty($customer)) {
                $qb->andWhere("customer.name LIKE :name");
                $qb->setParameter('name','%'. $customer.'%');
            }
            if (!empty($customerId)) {
                $qb->andWhere("customer.customerId LIKE :customerId");
                $qb->setParameter('customerId','%'. $customerId.'%');
            }


        }

    }


}
