<?php

namespace Appstore\Bundle\InventoryBundle\Repository;
use Appstore\Bundle\InventoryBundle\Entity\Sales;
use Doctrine\ORM\EntityRepository;

/**
 * ServiceSalesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServiceSalesRepository extends EntityRepository
{

    public function salesLists($config,$data)
    {

        $qb = $this->createQueryBuilder('s');
        $qb->join('s.customer','c');
        $qb->where("s.inventoryConfig = :config");
        $qb->setParameter('config', $config);
        $this->handleSearchBetween($qb,$data);
        $qb->orderBy('s.updated','DESC');
        $result = $qb->getQuery();
        return $result;

    }

    /**
     * @param $qb
     * @param $data
     */

    protected function handleSearchBetween($qb,$data)
    {
        if(!empty($data))
        {

            $startDate = isset($data['startDate'])  ? $data['startDate'] : '';
            $endDate = isset($data['endDate'])  ? $data['endDate'] : '';
            $invoice =    isset($data['invoice'])? $data['invoice'] :'';
            $amount =    isset($data['amount'])? $data['amount'] :'';
            $customer =    isset($data['customer'])? $data['customer'] :'';


            if (!empty($startDate)) {
                $start = date('Y-m-d',strtotime($data['startDate']));
                $qb->andWhere("s.updated >= :startDate");
                $qb->setParameter('startDate',$start);
            }

            if (!empty($endDate)) {
                $end = date('Y-m-d',strtotime($data['endDate']));
                $qb->andWhere("s.updated <= :endDate");
                $qb->setParameter('endDate',$end);
            }

            if (!empty($invoice)) {

                $qb->andWhere("s.invoice LIKE :invoice");
                $qb->setParameter('invoice', $invoice);
            }

            if (!empty($amount)) {

                $qb->andWhere("s.payment = :payment");
                $qb->setParameter('payment', $amount);
            }

            if (!empty($customer)) {

                $qb->andWhere("c.mobile = :mobile");
                $qb->setParameter('mobile', $customer);
            }
        }

    }



}
