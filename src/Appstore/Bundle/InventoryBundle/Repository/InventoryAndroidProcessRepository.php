<?php

namespace Appstore\Bundle\InventoryBundle\Repository;

use Appstore\Bundle\InventoryBundle\Entity\InventoryAndroidProcess;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;


/**
 * BusinessAndroidProcessRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InventoryAndroidProcessRepository extends EntityRepository
{

    public function getAndroidSalesList( $config){

        $qb = $this->createQueryBuilder('e');
        $qb->leftJoin('e.androidDevice','a');
        $qb->select('e.id as id','e.created as created','e.itemCount as itemCount','e.status as status');
         $qb->addSelect('a.device as device');
        $qb->where('e.inventoryConfig = :config')->setParameter('config', $config);
        $qb->orderBy('e.created',"DESC");
        $result = $qb->getQuery();
        return $result;
    }
    public function insertAndroidProcess(GlobalOption $option,$device,$process,$data)
    {
        $em =  $this->_em;

        $device = $em->getRepository('SettingToolBundle:AndroidDeviceSetup')->findOneBy(array('globalOption'=> $option,'id' => $device));

        $entity = new InventoryAndroidProcess();
        $entity->setInventoryConfig($option->getInventoryConfig());
        $entity->setAndroidDevice($device);
        $entity->setProcess($process);
        $entity->setJsonItem($data['item']);
        $entity->setItemCount($data['itemCount']);
        $entity->setJsonSubItem($data['subItem']);
        $entity->setSubItemCount($data['subItemCount']);
        $entity->setStatus(false);
        $em->persist($entity);
        $em->flush();
        return $entity;

    }


}
