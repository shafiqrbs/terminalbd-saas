<?php

namespace Appstore\Bundle\RestaurantBundle\Repository;
use Appstore\Bundle\InventoryBundle\Entity\InventoryConfig;
use Appstore\Bundle\RestaurantBundle\Entity\Coupon;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;

/**
 * CouponRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CouponRepository extends EntityRepository
{

    public function getValidCouponCode(GlobalOption $globalOption , $code)
    {

        $config = $globalOption->getRestaurantConfig()->getId();
        $datetime = new \DateTime("now");
        $today_startdatetime = $datetime->format('Y-m-d 00:00:00');
        $today_enddatetime = $datetime->format('Y-m-d 23:59:59');


        $qb = $this->createQueryBuilder('coupon');
        $qb->where("coupon.status = 1");
        $qb->andWhere("coupon.restaurantConfig =".$config );
        $qb->andWhere("coupon.couponCode = :couponCode");
        $qb->setParameter('couponCode', $code);
        $qb->andWhere('coupon.startDate <= :startDate');
        $qb->setParameter('startDate', $today_startdatetime);
        $qb->andWhere('coupon.endDate >= :endDate');
        $qb->setParameter('endDate', $today_enddatetime);
        $result = $qb->getQuery()->getOneOrNullResult();
        return $result;


    }

    public function getApiDiscountCoupon(GlobalOption $entity)
    {
        $config = $entity->getRestaurantConfig()->getId();
        $result = $this->createQueryBuilder('e')
            ->andWhere("e.restaurantConfig ={$config}")
            ->orderBy("e.name","ASC")
            ->getQuery()->getResult();

        /* @var $row Coupon */

        $data = array();

        foreach($result as $key => $row ){

            $data[$key]['couponId'] = (int) $row->getId();
            $data[$key]['couponName'] = $row->getName();
            $data[$key]['couponCode'] = $row->getCouponCode();
            $data[$key]['amount'] = $row->getAmount();
            $data[$key]['limitAmount'] = $row->getAmountLimit();
            $data[$key]['validAmount'] = $row->getValidAmount();
            $data[$key]['startDate'] = $row->getStartDate()->format('Y-m-d');
            $data[$key]['endDate'] = $row->getEndDate()->format('Y-m-d');
            $data[$key]['percentage'] = $row->getPercentage();
            $data[$key]['quantity'] = $row->getQuantity();
            $data[$key]['remainingQuantity'] = $row->getRemainingQuantity();
            $data[$key]['status'] = $row->getStatus();
        }
        return $data;

    }


}
