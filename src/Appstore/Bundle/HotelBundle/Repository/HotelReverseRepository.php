<?php

namespace Appstore\Bundle\HotelBundle\Repository;

use Appstore\Bundle\HotelBundle\Entity\HotelInvoice;
use Appstore\Bundle\HotelBundle\Entity\HotelPurchase;
use Appstore\Bundle\HotelBundle\Entity\HotelReverse;
use Appstore\Bundle\RestaurantBundle\Entity\Invoice;
use Appstore\Bundle\RestaurantBundle\Entity\InvoiceParticular;
use Appstore\Bundle\RestaurantBundle\Entity\Particular;
use Appstore\Bundle\RestaurantBundle\Entity\Purchase;
use Appstore\Bundle\RestaurantBundle\Entity\PurchaseItem;
use Appstore\Bundle\RestaurantBundle\Entity\RestaurantConfig;
use Doctrine\ORM\EntityRepository;


/**
 * ParticularRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelReverseRepository extends EntityRepository
{
	public function purchaseReverse(HotelPurchase $entity,$data)
	{
		if(empty($entity->getHotelReverse())){
			$reverse = New HotelReverse();
		}else{
			$reverse = $entity->getHotelReverse();
		}
		$reverse->setHotelConfig($entity->getHotelConfig());
		$reverse->setProcess('purchase');
		$reverse->setContent($data);
		$reverse->setHotelPurchase($entity);
		$this->_em->persist($reverse);
		$this->_em->flush($reverse);

	}
	public function salesReverse(HotelInvoice $entity,$data)
	{

		if(empty($entity->getHotelReverse())){
			$reverse = New HotelReverse();
		}else{
			$reverse = $entity->getHotelReverse();
		}
		$reverse->setHotelConfig($entity->getHotelConfig());
		$reverse->setProcess('sales');
		$reverse->setContent($data);
		$reverse->setHotelInvoice($entity);
		$this->_em->persist($reverse);
		$this->_em->flush($reverse);

	}


}
