<?php

namespace Appstore\Bundle\HotelBundle\Repository;
use Appstore\Bundle\HotelBundle\Entity\HotelConfig;
use Appstore\Bundle\HotelBundle\Entity\HotelInvoice;
use Appstore\Bundle\HotelBundle\Entity\HotelInvoiceParticular;
use Appstore\Bundle\HotelBundle\Entity\HotelParticular;
use Appstore\Bundle\HotelBundle\Entity\HotelProductionElement;
use Appstore\Bundle\HotelBundle\Entity\HotelPurchaseItem;
use Appstore\Bundle\HospitalBundle\Entity\InvoiceParticular;
use Appstore\Bundle\HotelBundle\Entity\HotelRoomGallery;
use Appstore\Bundle\HotelBundle\Entity\HotelTemporaryInvoice;
use Appstore\Bundle\RestaurantBundle\Entity\ProductionElement;
use Core\UserBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;


/**
 * HotelInvoiceParticularRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelRoomGalleryRepository extends EntityRepository
{

	public function insertProductGallery(HotelParticular $reEntity,$data)
	{

		$em = $this->_em;
		$i=0;

		foreach ($data as $key => $value) {
			$entity = new HotelRoomGallery();
			if(strpos($key,'tmpname')){
				$imageName = nl2br(htmlentities(stripslashes($value)));
				$entity->setPath($imageName);
				$entity->setParticular($reEntity);
				$em->persist($entity);

			}
			$i++;

		}
		$em->flush();
		if(!empty($data['imageId'])){
			$this->removeImage($data['imageId']);
		}
	}

	public function removeImage($posts)
	{
		$em = $this->_em;
		foreach ($posts as $post ){
			$entity = $em->getRepository('HotelBundle:HotelRoomGallery')->find($post);
			$entity->removeUpload($entity->getParticular()->getHotelConfig()->getGlobalOption()->getId(),$entity->getParticular()->getId());
			$em->remove($entity);
		}
		$em->flush();


	}


}
